/*
 * I hope this lesson can teach you what to fix if doing something unwantted.
 * checkout, reset, rm, mv
 */

Add content and stage it:
	$ echo "git reset" >> test
	$ git add test
	$ git status
	=====================================================
	# On branch master
	# Changes to be committed:
	#   (use "git reset HEAD <file>..." to unstage)
	#
	#	modified:   test
	#
	=====================================================


Revert the changed content in workspace, since content is staged,
nothing in workspace is reverted:
	$ git checkout test
	$ git status
	=====================================================
	# On branch master
	# Changes to be committed:
	#   (use "git reset HEAD <file>..." to unstage)
	#
	#	modified:   test
	#
	=====================================================

Clear the staged content:
	$ git reset test
	$ git status
	=====================================================
	# On branch master
	# Changes not staged for commit:
	#   (use "git add <file>..." to update what will be committed)
	#   (use "git checkout -- <file>..." to discard changes in working directory)
	#
	#	modified:   test
	#
	no changes added to commit (use "git add" and/or "git commit -a")
	=====================================================

Clear the chagned part:
	$ git checkout test
	$ git status
	=====================================================
	# On branch master
	nothing to commit (working directory clean)
	=====================================================

Add a new commit:
	$ echo "git reset" >> test
	$ git commit -a -m "lesson 3 commit"
	$ git log --oneline
	=====================================================
	7abb744 lesson 3 commit
	db3f64c Merge branch 'master' into TEST
	2969a41 another second commit
	aef9a2b the second commit
	246b60f commit title
	=====================================================

Remove the commit, but keeps its content:
	$ git reset HEAD~1
	$ git log --oneline
	=====================================================
	db3f64c Merge branch 'master' into TEST
	2969a41 another second commit
	aef9a2b the second commit
	246b60f commit title
	=====================================================

The changes of your third commit still keeps in workspace:
	$ git diff
	=====================================================
	index b4fc169..7a6df03 100644
	--- a/test
	+++ b/test
	@@ -1,3 +1,4 @@
 	git_init
 	git checkout
 	git merge
	+git reset
	=====================================================

Commit it again! For the next experiment:
	$ git commit -a -m "lesson 3 commit"
	$ git log --oneline
	=====================================================
	c10ff2a lesson 3 commit
	db3f64c Merge branch 'master' into TEST
	2969a41 another second commit
	aef9a2b the second commit
	246b60f commit title
	=====================================================

Remove the commit, and clear your workspace too:
	$ git reset --hard HEAD~1
	$ git diff
	=====================================================
	<NOTHING>
	=====================================================

Create new file node in git history, we want to show rm and mv command:
	$ echo "test" > new_test
	$ git add new_test
	$ git commit -m "lesson 3-2 commit"

Move file in git:
	$ git mv new_test new_test2
	$ git status
	=====================================================
	# On branch master
	# Changes to be committed:
	#   (use "git reset HEAD <file>..." to unstage)
	#
	#	renamed:    new_test -> new_test2
	#
	=====================================================
	
Commit the move operation:
	$ git commit -m "lesson 3-3 commit"
	$ git show HEAD
	=====================================================
	commit 825dff63571c6271b36f8a186bab143e992808cd
	Author: Chia-Wei Chang <rglyab@gmail.com>
	Date:   Sun Jul 20 08:51:04 2014 +0800

	    lesson 3-3 commit

	diff --git a/new_test b/new_test
	deleted file mode 100644
	index 9daeafb..0000000
	--- a/new_test
	+++ /dev/null
	@@ -1 +0,0 @@
	-test
	diff --git a/new_test2 b/new_test2
	new file mode 100644
	index 0000000..9daeafb
	--- /dev/null
	+++ b/new_test2
	@@ -0,0 +1 @@
	+test
	=====================================================

Remove file in git:
	$ git rm new_test2
	$ git status
	=====================================================
	# On branch master
	# Changes to be committed:
	#   (use "git reset HEAD <file>..." to unstage)
	#
	#	deleted:    new_test2
	#
	=====================================================


Commit the remove operation:
	$ git commit -m "lesson 3-4 commit"
	$ git show HEAD
	=====================================================
	commit 41804699fcc1b5694dd81944e3072b9053f0cb84
	Author: Chia-Wei Chang <rglyab@gmail.com>
	Date:   Sun Jul 20 08:53:15 2014 +0800

	    lesson 3-4 commit

	diff --git a/new_test2 b/new_test2
	deleted file mode 100644
	index 9daeafb..0000000
	--- a/new_test2
	+++ /dev/null
	@@ -1 +0,0 @@
	-test
	=====================================================
